name: Playwright Tests

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main, master]

permissions:
  contents: read
  actions: write

jobs:
  playwright-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          tools: composer
          coverage: none

      - name: Install Composer dependencies
        run: composer install --no-dev --no-scripts --optimize-autoloader

      - name: Install npm dependencies
        run: npm install

      - name: Build plugin
        run: npm run build

      - name: Setup WordPress environment
        timeout-minutes: 5
        run: |
          npm install -g @wordpress/env
          echo "Starting WordPress environment..."
          npx wp-env start --config=.wp-env.json || (echo "WordPress start failed" && exit 1)
          echo "WordPress environment started"

      - name: Wait for WordPress to be ready
        timeout-minutes: 2
        run: |
          echo "Waiting for WordPress to respond..."
          timeout 120 bash -c 'until curl -s http://localhost:8888 >/dev/null; do echo "Waiting..."; sleep 2; done'
          echo "WordPress is responding"

      - name: Setup WordPress and plugin
        timeout-minutes: 3
        run: |
          echo "Verifying WordPress installation..."
          npx wp-env run cli wp core is-installed || (echo "WordPress not installed" && exit 1)
          
          echo "Activating plugin..."
          npx wp-env run cli wp plugin activate gsap-block-animator || (echo "Plugin activation failed" && npx wp-env logs && exit 1)
          
          echo "Verifying plugin is active..."
          npx wp-env run cli wp plugin list --status=active
          echo "WordPress setup complete"

      - name: Setup Playwright
        timeout-minutes: 3
        working-directory: ./tests/playwright
        run: |
          echo "Installing Playwright dependencies..."
          npm install
          echo "Installing Playwright browsers..."
          npx playwright install chromium
          echo "Playwright setup complete"

      - name: Run Playwright tests
        id: playwright-tests
        timeout-minutes: 10
        working-directory: ./tests/playwright
        env:
          CI: true
          PLAYWRIGHT_BASE_URL: http://localhost:8888
        run: |
          echo "Base URL: $PLAYWRIGHT_BASE_URL"
          echo "WordPress status check:"
          curl -s -o /dev/null -w "%{http_code}" http://localhost:8888 || echo "WordPress not responding"
          
          echo "Starting Playwright tests..."
          npx playwright test --reporter=list,html --timeout=30000
          test_exit_code=$?
          echo "exit_code=$test_exit_code" >> $GITHUB_OUTPUT
          
          if [ $test_exit_code -ne 0 ]; then
            echo "Tests failed with exit code $test_exit_code"
            exit $test_exit_code
          fi

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-test-results
          path: tests/playwright/test-results/
          if-no-files-found: ignore
          retention-days: 7

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: tests/playwright/playwright-report/
          if-no-files-found: ignore
          retention-days: 7

      - name: Check test results
        if: steps.playwright-tests.outcome == 'failure'
        run: |
          echo "‚ùå Playwright tests failed!"
          exit 1

      - name: Stop WordPress environment
        if: always()
        run: npx wp-env stop